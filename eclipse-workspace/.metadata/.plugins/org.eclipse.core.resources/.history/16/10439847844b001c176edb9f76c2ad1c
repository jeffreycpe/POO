package tp.model.agents;

import java.awt.Point;

/**
 * Cette classe modÃ©lise un Animal dans la simulation
 * @author bruno
 *
 */
public class Animal extends Agent{
	/* attributs de classe */
	//private static int currentId = 0;
	
	/* attributs d'instance*/
	/** identifiant unique de l'animal*/
	//private int id;
	/** age en unitÃ© de temps*/
	//private int age;
	/** position sur la carte*/
	//private Point coord;
	/** Ã©tat de santÃ© de l'animal */
	private Etat etat=Etat.Normal;
	private Sexe sexe;
	
	/* 
	 * constructeurs 
	 */
	
	public Animal(Sexe sexe, Point coord) {
		super();
		age = 0; //On peutr mettre this pour que ca soit plus clair
		
		this.sexe=sexe;
		//this.coord=coord;
		this.coord=new Point(coord);
		
		
	}
	
	public Animal(Sexe sexe) {
		//TODO
		
		this(sexe, new Point(0,0));
		/* crÃ©e un animal avec le sexe passÃ© en paramÃ¨tre, Ã  la position (0;0), d'Ã¢ge 0 et lui attribue un id unique
		 * une bonne maniÃ¨re de faire 
		 * en utilisant ce qui existe dÃ©jÃ , une moins bonne
		 */
	}
	
	public Animal() {
		//TODO
		this(Sexe.Femelle, new Point(0,0)); //2 paramères comme l'objet le plus fournis
		/*
		age = 0;
		id = Animal.getUniqueId();
		sexe = Sexe.Femelle;
		coord = new Point(0,0);
		*/
		
		
		/* crÃ©e un animal de sexe femelle, Ã  la position (0;0), d'Ã¢ge 0 et lui attribue un id unique
		 * une bonne maniÃ¨re de faire 
		 * en utilisant ce qui existe dÃ©jÃ , une moins bonne
		 */
	}
	
	/*
	 *  Accesseurs et mutateurs
	 */
	//TODO
	
	
	
	public int getAge() {
		return this.age;
	}
	
	/*
	public int getId() {
		return id;
	}
*/
	
	

	
	/*
	public Point getCoord() {
		//Point p = new Point(this.coord);  //=> ctrl space permet de voir, on luit met un new point
		//return p;    // Il retourne un pointeur our type construit seulment => modifiable en dehors de la fonction
		
		return (Point) this.coord.clone();
	}
*/
	public void setCoord(Point coord) {
		
		this.coord = coord;
	}

	public Etat getEtat() {
		return etat;
	}

	public void setEtat(Etat etat) {
		this.etat = etat;
	}

	public Sexe getSexe() {
		return sexe;
	}

	public void setSexe(Sexe sexe) {
		this.sexe = sexe;
	}

	/*
	private void setAge(int newAge) { //Pas en statique 
		this.age = newAge;
	}
	
	
	*/
	
	
	/*
	 * RedÃ©finitions de mÃ©thodes d'object
	 */
	//TODO
	

	/* 
	 * comportements d'instance
	 */
	
	

	public void seDeplacer() {
		//TODO utiliser Math.random() pour choisir une direction de dÃ©placement
		
		int Min = -1;
		int Max = 1;
		int dx =  Min + (int)(Math.random() * ((Max - Min) + 1));
		int dy = Min + (int)(Math.random() * ((Max - Min) + 1));
		
		Point newCoord=new Point(this.coord.x + dx, this.coord.y + dy);
		setCoord(newCoord);
	}
	
	
	/*
	public void vieillir() {
		//TODO fait vieillir l'animal d'une unitÃ© de temps
		//une bonne maniÃ¨re de faire, une moins bonne...
		
		
		//manière brute
		//this.age++;
		
		//bonne pratique securisé utiliser setAge
		int newAge = getAge() + 1;
		setAge(newAge);
	}
	*/
	
	
	/*
	public void rencontrer(Animal a) {
		//TODO
	}
	
	
	*/
	
	
	
	/* comportements de classe */ 
	/**
	 * Renvoie un identifiant unique non encore utilisÃ©
	 * @return un identifiant entier unique d'animal
	 */
	
	
	
	
	/*
	
	private static int getUniqueId() {
		//TODO 
		int id = currentId;
		currentId++;  //Il sauvegarde puis incrémente la nouvelle valeur 
		
		
		return id;
	}
	
*/
	
	
	@Override
	public String toString() {
		super.toString();
		return super.toString() + "age" + this.getAge();
		//return getClass().getSimpleName() + " " + getId() + " (" + getCoord() + "age : " + getAge() + ")";
	}

	
	static void printClassName(Object obj) {
        System.out.println("The class of " + obj +
                           " is " + obj.getClass().getName());
    }

	
	
	
	/*
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + age;
		result = prime * result + ((etat == null) ? 0 : etat.hashCode());
		result = prime * result + ((sexe == null) ? 0 : sexe.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Animal other = (Animal) obj;
		if (age != other.age)
			return false;
		if (etat != other.etat)
			return false;
		if (sexe != other.sexe)
			return false;
		return true;
	}


*/
}